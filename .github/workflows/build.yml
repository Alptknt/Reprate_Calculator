name: Build Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow

      # Prepare assets list
      - name: Prepare assets for PyInstaller
        id: assets
        run: |
          mkdir -p assets
          # Move or copy all your image files into 'assets' folder
          cp Lumos_Logo_32x32.png Lumos_Logo_32x32.ico Lumos_Laser_Logo_1024x236.png Osc_Diagram.png Screenshot.png assets/
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Windows uses semicolon separator for multiple files
            echo "DATA_FILES=$(ls assets/* | tr '\n' ';')" >> $GITHUB_ENV
          else
            # macOS: will add files one by one in PyInstaller command
            FILES=$(ls assets/*)
            echo "ASSETS_FILES=\"$FILES\"" >> $GITHUB_ENV
          fi

      # Build executable
      - name: Build executable with PyInstaller
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --noconfirm --onefile --add-data "$DATA_FILES" main.py
          else
            CMD="pyinstaller --noconfirm --onefile --windowed"
            for f in $ASSETS_FILES; do
              CMD+=" --add-data \"$f:.\""
            done
            CMD+=" main.py"
            eval $CMD
          fi

      # Upload artifacts for release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: dist/*
